main ::2024/10/17 11:22:58 Database at ./badger cleared successfully.
main ::2024/10/17 11:22:58 Paxos server S1 is running on localhost:50051...
main ::2024/10/17 11:22:58 Paxos server S2 is running on localhost:50052...
main ::2024/10/17 11:22:58 Paxos server S3 is running on localhost:50053...
main ::2024/10/17 11:22:58 Paxos server S5 is running on localhost:50055...
main ::2024/10/17 11:22:58 Paxos server S4 is running on localhost:50054...
main ::2024/10/17 11:22:58 All servers have started.
main ::2024/10/17 11:22:58 Paxos Server length : 5
ConnectToLivePeers ::2024/10/17 11:22:58 Reading CSV...
ConnectToLivePeers ::2024/10/17 11:22:58 processing Set  1
ConnectToLivePeers ::2024/10/17 11:22:58 0 1 1 [S1 S2 S3 S4 S5]
ConnectToLivePeers ::2024/10/17 11:22:58 Live Server map map[S1:true S2:true S3:true S4:true S5:true]
ConnectToLivePeers ::On server S1:: On server S1:: On server S1:: On server S1:: On server S1:: 2024/10/17 11:22:58 Client sends Transaction  0 {S1 S3 45}
Server S1::2024/10/17 11:22:58 Server S1 received transaction from S1 to S3 of amount 45
Server S1::2024/10/17 11:22:58 Backlog paxos: Transaction 0 processed successfully on S1
Server S1::2024/10/17 11:22:58 Client 1 received response from server: success:true  message:"Transaction processed. Please check logs for further status."
Server S1::2024/10/17 11:22:58 Balance of  on server S1: 55
Server S1::2024/10/17 11:22:58 Client sends Transaction  1 {S3 S5 55}
Server S3::2024/10/17 11:22:58 Server S3 received transaction from S3 to S5 of amount 55
Server S3::2024/10/17 11:22:58 Backlog paxos: Transaction 1 processed successfully on S3
Server S3::2024/10/17 11:22:58 Client 3 received response from server: success:true  message:"Transaction processed. Please check logs for further status."
Server S3::2024/10/17 11:22:58 Balance of  on server S3: 45
Server S3::2024/10/17 11:22:58 Client sends Transaction  2 {S2 S4 30}
Server S2::2024/10/17 11:22:58 Server S2 received transaction from S2 to S4 of amount 30
Server S2::2024/10/17 11:22:58 Backlog paxos: Transaction 2 processed successfully on S2
Server S2::2024/10/17 11:22:58 Client 2 received response from server: success:true  message:"Transaction processed. Please check logs for further status."
Server S2::2024/10/17 11:22:58 Balance of  on server S2: 70
Server S2::2024/10/17 11:22:58 Client sends Transaction  3 {S5 S1 50}
Server S5::2024/10/17 11:22:58 Server S5 received transaction from S5 to S1 of amount 50
Server S5::2024/10/17 11:22:58 Backlog paxos: Transaction 3 processed successfully on S5
Server S5::2024/10/17 11:22:58 Client 5 received response from server: success:true  message:"Transaction processed. Please check logs for further status."
Server S5::2024/10/17 11:22:58 Balance of  on server S5: 50
Server S5::2024/10/17 11:22:58 Client sends Transaction  4 {S1 S3 75}
Server S1::2024/10/17 11:22:58 Server S1 received transaction from S1 to S3 of amount 75
Server S1::2024/10/17 11:22:58 Starting Paxos consensus...
Server S1::2024/10/17 11:22:58 Sleeping for 20ms...
Server S1::2024/10/17 11:22:58 Server S4: Promise for from S1 for ballot 1 gave promise:true
Server S1::2024/10/17 11:22:58 Promise successful for S1 : 1
Server S1::2024/10/17 11:22:58 Server S5: Promise for from S1 for ballot 1 gave promise:true  uncommitted_transactions:{key:3  value:{sender:"S5"  receiver:"S1"  amount:50}}
Server S1::2024/10/17 11:22:58 Promise successful for S1 : 1
Server S1::2024/10/17 11:22:58 Promise successful for self
Server S1::2024/10/17 11:22:58 Server S2: Promise for from S1 for ballot 1 gave promise:true  uncommitted_transactions:{key:2  value:{sender:"S2"  receiver:"S4"  amount:30}}
Server S1::2024/10/17 11:22:58 Promise successful for S1 : 1
Server S1::2024/10/17 11:22:58 Server S3: Promise for from S1 for ballot 1 gave promise:true  uncommitted_transactions:{key:1  value:{sender:"S3"  receiver:"S5"  amount:55}}
Server S1::2024/10/17 11:22:58 Promise successful for S1 : 1
Server S1::2024/10/17 11:22:58 Promise count for S1 : 5 / 5 -> 2
Server S1::2024/10/17 11:22:58 Paxos Prepare successful on S1 with promise count 5
Server S1::2024/10/17 11:22:58 Server S5 accepted transactions with ballot 1
Server S1::2024/10/17 11:22:58 Accept successful for self
Server S1::2024/10/17 11:22:58 Server S2 accepted transactions with ballot 1
Server S1::2024/10/17 11:22:58 Server S3 accepted transactions with ballot 1
Server S1::2024/10/17 11:22:58 Server S4 accepted transactions with ballot 1
Server S1::2024/10/17 11:22:58 Paxos Accept successful on S1 with accepted count 5
Server S1::2024/10/17 11:22:58 Committing transactions on server S4
Server S1::2024/10/17 11:22:58 Executing log 2 on server S4: sender:"S2"  receiver:"S4"  amount:30 , balance :130 , bMap: map[S1:100 S2:70 S3:100 S4:130 S5:100] 
Server S1::2024/10/17 11:22:58 Executing log 1 on server S4: sender:"S3"  receiver:"S5"  amount:55 , balance :130 , bMap: map[S1:100 S2:70 S3:45 S4:130 S5:155] 
Server S1::2024/10/17 11:22:58 Executing log 3 on server S4: sender:"S5"  receiver:"S1"  amount:50 , balance :130 , bMap: map[S1:150 S2:70 S3:45 S4:130 S5:105] 
Server S1::2024/10/17 11:22:58 Executing log 0 on server S4: sender:"S1"  receiver:"S3"  amount:45 , balance :130 , bMap: map[S1:105 S2:70 S3:90 S4:130 S5:105] 
Server S1::2024/10/17 11:22:58 Committing transactions on server S5
Server S1::2024/10/17 11:22:58 Executing log 3 on server S5: sender:"S5"  receiver:"S1"  amount:50 , balance :50 , bMap: map[S1:150 S2:100 S3:100 S4:100 S5:50] 
Server S1::2024/10/17 11:22:58 Executing log 0 on server S5: sender:"S1"  receiver:"S3"  amount:45 , balance :50 , bMap: map[S1:105 S2:100 S3:145 S4:100 S5:50] 
Server S1::2024/10/17 11:22:58 Executing log 2 on server S5: sender:"S2"  receiver:"S4"  amount:30 , balance :50 , bMap: map[S1:105 S2:70 S3:145 S4:130 S5:50] 
Server S1::2024/10/17 11:22:58 Executing log 1 on server S5: sender:"S3"  receiver:"S5"  amount:55 , balance :105 , bMap: map[S1:105 S2:70 S3:90 S4:130 S5:105] 
Server S1::2024/10/17 11:22:58 Committing transactions on server S1
Server S1::2024/10/17 11:22:58 Executing log 3 on server S1: sender:"S5"  receiver:"S1"  amount:50 , balance :105 , bMap: map[S1:105 S2:100 S3:100 S4:100 S5:50] 
Server S1::2024/10/17 11:22:58 Executing log 0 on server S1: sender:"S1"  receiver:"S3"  amount:45 , balance :105 , bMap: map[S1:105 S2:100 S3:145 S4:100 S5:50] 
Server S1::2024/10/17 11:22:58 Client 1 received response from server: success:true  message:"Transaction processed. Please check logs for further status."
Server S1::2024/10/17 11:22:58 Balance of  on server S1: 105
2024/10/17 11:22:58 Choose an option:
2024/10/17 11:22:58 1. PrintBalance <client> or all
Server S1::2024/10/17 11:22:58 Executing log 2 on server S1: sender:"S2"  receiver:"S4"  amount:30 , balance :105 , bMap: map[S1:105 S2:70 S3:145 S4:130 S5:50] 
2024/10/17 11:22:58 2. PrintLog <server> or all
2024/10/17 11:22:58 Executing log 1 on server S1: sender:"S3"  receiver:"S5"  amount:55 , balance :105 , bMap: map[S1:105 S2:70 S3:90 S4:130 S5:105] 
2024/10/17 11:22:58 3. PrintDB <server> or all
2024/10/17 11:22:58 Decide successful for self
2024/10/17 11:22:58 4. Performance <server> or all
2024/10/17 11:22:58 5. NextIteration
2024/10/17 11:22:58 6. CrashServer <server>
2024/10/17 11:22:58 7. BalanceMap <server>
2024/10/17 11:22:58 Committing transactions on server S2
2024/10/17 11:22:58 Enter option: 
2024/10/17 11:22:58 Executing log 3 on server S2: sender:"S5"  receiver:"S1"  amount:50 , balance :70 , bMap: map[S1:150 S2:70 S3:100 S4:100 S5:50] 
2024/10/17 11:22:58 Executing log 0 on server S2: sender:"S1"  receiver:"S3"  amount:45 , balance :70 , bMap: map[S1:105 S2:70 S3:145 S4:100 S5:50] 
2024/10/17 11:22:58 Executing log 2 on server S2: sender:"S2"  receiver:"S4"  amount:30 , balance :70 , bMap: map[S1:105 S2:70 S3:145 S4:130 S5:50] 
2024/10/17 11:22:58 Executing log 1 on server S2: sender:"S3"  receiver:"S5"  amount:55 , balance :70 , bMap: map[S1:105 S2:70 S3:90 S4:130 S5:105] 
2024/10/17 11:22:58 Committing transactions on server S3
2024/10/17 11:22:58 Executing log 2 on server S3: sender:"S2"  receiver:"S4"  amount:30 , balance :45 , bMap: map[S1:100 S2:70 S3:45 S4:130 S5:100] 
2024/10/17 11:22:58 Executing log 1 on server S3: sender:"S3"  receiver:"S5"  amount:55 , balance :45 , bMap: map[S1:100 S2:70 S3:45 S4:130 S5:155] 
2024/10/17 11:22:58 Executing log 3 on server S3: sender:"S5"  receiver:"S1"  amount:50 , balance :45 , bMap: map[S1:150 S2:70 S3:45 S4:130 S5:105] 
2024/10/17 11:22:58 Executing log 0 on server S3: sender:"S1"  receiver:"S3"  amount:45 , balance :90 , bMap: map[S1:105 S2:70 S3:90 S4:130 S5:105] 
2024/10/17 11:22:58 Paxos consensus succeeded on S1
2024/10/17 11:22:58 Backlog paxos: Transaction 4 processed successfully on S1
2024/10/17 11:23:01 Invalid option
2024/10/17 11:23:01 Choose an option:
2024/10/17 11:23:01 1. PrintBalance <client> or all
2024/10/17 11:23:01 2. PrintLog <server> or all
2024/10/17 11:23:01 3. PrintDB <server> or all
2024/10/17 11:23:01 4. Performance <server> or all
2024/10/17 11:23:01 5. NextIteration
2024/10/17 11:23:01 6. CrashServer <server>
2024/10/17 11:23:01 7. BalanceMap <server>
2024/10/17 11:23:01 Enter option: 
2024/10/17 11:23:06 Balance of S5 on server S5: 105
2024/10/17 11:23:06 Balance of S4 on server S4: 130
2024/10/17 11:23:06 Balance of S1 on server S1: 30
2024/10/17 11:23:06 Balance of S2 on server S2: 70
2024/10/17 11:23:06 Balance of S3 on server S3: 90
2024/10/17 11:23:06 Datastore for server S5:
2024/10/17 11:23:06 output: [0: S1|S3|45] , [1: S3|S5|55] , [2: S2|S4|30] , [3: S5|S1|50] , 
2024/10/17 11:23:06 Datastore for server S4:
2024/10/17 11:23:06 output: [0: S1|S3|45] , [1: S3|S5|55] , [2: S2|S4|30] , [3: S5|S1|50] , 
2024/10/17 11:23:06 Datastore for server S1:
2024/10/17 11:23:06 output: [0: S1|S3|45] , [1: S3|S5|55] , [2: S2|S4|30] , [3: S5|S1|50] , 
2024/10/17 11:23:06 Datastore for server S2:
2024/10/17 11:23:06 output: [0: S1|S3|45] , [1: S3|S5|55] , [2: S2|S4|30] , [3: S5|S1|50] , 
2024/10/17 11:23:06 Datastore for server S3:
2024/10/17 11:23:06 output: [0: S1|S3|45] , [1: S3|S5|55] , [2: S2|S4|30] , [3: S5|S1|50] , 
2024/10/17 11:23:06 Log for server S1:
2024/10/17 11:23:06 INdex: 4 Transaction: S1 -> S3, Amount: 75
2024/10/17 11:23:06 Log for server S2:
2024/10/17 11:23:06 Log for server S3:
2024/10/17 11:23:06 Log for server S5:
2024/10/17 11:23:06 Log for server S4:
2024/10/17 11:23:06 Performance for Server: S1	
2024/10/17 11:23:06   Handler: /paxos.Paxos/SendTransaction    Total Calls: 2   Total Latency: 111.5682ms    Average Latency: 55.7841ms
2024/10/17 11:23:06 Performance for Server: S2	
2024/10/17 11:23:06   Handler: /paxos.Paxos/Accept    Total Calls: 1   Total Latency: 0s    Average Latency: 0s
2024/10/17 11:23:06   Handler: /paxos.Paxos/Decide    Total Calls: 1   Total Latency: 5.1094ms    Average Latency: 5.1094ms
2024/10/17 11:23:06   Handler: /paxos.Paxos/SendTransaction    Total Calls: 1   Total Latency: 57.6013ms    Average Latency: 57.6013ms
2024/10/17 11:23:06   Handler: /paxos.Paxos/Prepare    Total Calls: 1   Total Latency: 788.5µs    Average Latency: 788.5µs
2024/10/17 11:23:06 Performance for Server: S3	
2024/10/17 11:23:06   Handler: /paxos.Paxos/SendTransaction    Total Calls: 1   Total Latency: 64.6324ms    Average Latency: 64.6324ms
2024/10/17 11:23:06   Handler: /paxos.Paxos/Prepare    Total Calls: 1   Total Latency: 0s    Average Latency: 0s
2024/10/17 11:23:06   Handler: /paxos.Paxos/Accept    Total Calls: 1   Total Latency: 0s    Average Latency: 0s
2024/10/17 11:23:06   Handler: /paxos.Paxos/Decide    Total Calls: 1   Total Latency: 4.7944ms    Average Latency: 4.7944ms
2024/10/17 11:23:06 Performance for Server: S5	
2024/10/17 11:23:06   Handler: /paxos.Paxos/SendTransaction    Total Calls: 1   Total Latency: 65.2743ms    Average Latency: 65.2743ms
2024/10/17 11:23:06   Handler: /paxos.Paxos/Prepare    Total Calls: 1   Total Latency: 0s    Average Latency: 0s
2024/10/17 11:23:06   Handler: /paxos.Paxos/Accept    Total Calls: 1   Total Latency: 0s    Average Latency: 0s
2024/10/17 11:23:06   Handler: /paxos.Paxos/Decide    Total Calls: 1   Total Latency: 6.8432ms    Average Latency: 6.8432ms
2024/10/17 11:23:06 Performance for Server: S4	
2024/10/17 11:23:06   Handler: /paxos.Paxos/Accept    Total Calls: 1   Total Latency: 0s    Average Latency: 0s
2024/10/17 11:23:06   Handler: /paxos.Paxos/Decide    Total Calls: 1   Total Latency: 3.0986ms    Average Latency: 3.0986ms
2024/10/17 11:23:06   Handler: /paxos.Paxos/Prepare    Total Calls: 1   Total Latency: 0s    Average Latency: 0s
2024/10/17 11:23:06 Balance Map at server S1 is map[S1:30 S2:70 S3:90 S4:130 S5:105]
2024/10/17 11:23:06 Balance Map at server S2 is map[S1:105 S2:70 S3:90 S4:130 S5:105]
2024/10/17 11:23:06 Balance Map at server S3 is map[S1:105 S2:70 S3:90 S4:130 S5:105]
2024/10/17 11:23:06 Balance Map at server S5 is map[S1:105 S2:70 S3:90 S4:130 S5:105]
2024/10/17 11:23:06 Balance Map at server S4 is map[S1:105 S2:70 S3:90 S4:130 S5:105]
2024/10/17 11:23:06 Choose an option:
2024/10/17 11:23:06 1. PrintBalance <client> or all
2024/10/17 11:23:06 2. PrintLog <server> or all
2024/10/17 11:23:06 3. PrintDB <server> or all
2024/10/17 11:23:06 4. Performance <server> or all
2024/10/17 11:23:06 5. NextIteration
2024/10/17 11:23:06 6. CrashServer <server>
2024/10/17 11:23:06 7. BalanceMap <server>
2024/10/17 11:23:06 Enter option: 
2024/10/17 11:23:20 Proceeding to next iteration...
2024/10/17 11:23:20 processing Set  2
2024/10/17 11:23:20 5 2 2 [S1 S2 S3 S5]
2024/10/17 11:23:20 Live Server map map[S1:true S2:true S3:true S4:false S5:true]
ConnectToLivePeers ::On server S4:: On server S4:: On server S4:: On server S4:: 2024/10/17 11:23:21 Client sends Transaction  5 {S5 S3 5}
Server S5::2024/10/17 11:23:21 Server S5 received transaction from S5 to S3 of amount 5
Server S5::2024/10/17 11:23:21 Backlog paxos: Transaction 5 processed successfully on S5
Server S5::2024/10/17 11:23:21 Client 5 received response from server: success:true  message:"Transaction processed. Please check logs for further status."
Server S5::2024/10/17 11:23:21 Balance of  on server S5: 100
Server S5::2024/10/17 11:23:21 Client sends Transaction  6 {S3 S1 55}
Server S3::2024/10/17 11:23:21 Server S3 received transaction from S3 to S1 of amount 55
Server S3::2024/10/17 11:23:21 Backlog paxos: Transaction 6 processed successfully on S3
Server S3::2024/10/17 11:23:21 Client 3 received response from server: success:true  message:"Transaction processed. Please check logs for further status."
Server S3::2024/10/17 11:23:21 Balance of  on server S3: 35
Server S3::2024/10/17 11:23:21 Client sends Transaction  7 {S2 S3 10}
Server S2::2024/10/17 11:23:21 Server S2 received transaction from S2 to S3 of amount 10
Server S2::2024/10/17 11:23:21 Backlog paxos: Transaction 7 processed successfully on S2
Server S2::2024/10/17 11:23:21 Client 2 received response from server: success:true  message:"Transaction processed. Please check logs for further status."
Server S2::2024/10/17 11:23:21 Balance of  on server S2: 60
Server S2::2024/10/17 11:23:21 Client sends Transaction  8 {S3 S5 50}
Server S3::2024/10/17 11:23:21 Server S3 received transaction from S3 to S5 of amount 50
Server S3::2024/10/17 11:23:21 Starting Paxos consensus...
Server S3::2024/10/17 11:23:21 Sleeping for 18ms...
Server S3::2024/10/17 11:23:21 Promise successful for self
Server S3::2024/10/17 11:23:21 Server S5: Promise for from S3 for ballot 2 gave promise:true  last_accepted_ballot:1  last_accepted_value:{key:0  value:{sender:"S1"  receiver:"S3"  amount:45}}  last_accepted_value:{key:1  value:{sender:"S3"  receiver:"S5"  amount:55}}  last_accepted_value:{key:2  value:{sender:"S2"  receiver:"S4"  amount:30}}  last_accepted_value:{key:3  value:{sender:"S5"  receiver:"S1"  amount:50}}  uncommitted_transactions:{key:5  value:{sender:"S5"  receiver:"S3"  amount:5}}
Server S3::2024/10/17 11:23:21 Promise successful for S3 : 2
Server S3::2024/10/17 11:23:21 Server S1: Promise for from S3 for ballot 2 gave promise:true  last_accepted_ballot:1  last_accepted_value:{key:0  value:{sender:"S1"  receiver:"S3"  amount:45}}  last_accepted_value:{key:1  value:{sender:"S3"  receiver:"S5"  amount:55}}  last_accepted_value:{key:2  value:{sender:"S2"  receiver:"S4"  amount:30}}  last_accepted_value:{key:3  value:{sender:"S5"  receiver:"S1"  amount:50}}  uncommitted_transactions:{key:4  value:{sender:"S1"  receiver:"S3"  amount:75}}
Server S3::2024/10/17 11:23:21 Promise successful for S3 : 2
Server S3::2024/10/17 11:23:21 Server S2: Promise for from S3 for ballot 2 gave promise:true  last_accepted_ballot:1  last_accepted_value:{key:0  value:{sender:"S1"  receiver:"S3"  amount:45}}  last_accepted_value:{key:1  value:{sender:"S3"  receiver:"S5"  amount:55}}  last_accepted_value:{key:2  value:{sender:"S2"  receiver:"S4"  amount:30}}  last_accepted_value:{key:3  value:{sender:"S5"  receiver:"S1"  amount:50}}  uncommitted_transactions:{key:7  value:{sender:"S2"  receiver:"S3"  amount:10}}
Server S3::2024/10/17 11:23:21 Promise successful for S3 : 2
Server S3::2024/10/17 11:23:21 Promise count for S3 : 4 / 5 -> 2
Server S3::2024/10/17 11:23:21 Paxos Prepare successful on S3 with promise count 4
Server S3::2024/10/17 11:23:21 Server S1 accepted transactions with ballot 2
Server S3::2024/10/17 11:23:21 Server S2 accepted transactions with ballot 2
Server S3::2024/10/17 11:23:21 Accept successful for self
Server S3::2024/10/17 11:23:21 Server S5 accepted transactions with ballot 2
Server S3::2024/10/17 11:23:21 Paxos Accept successful on S3 with accepted count 4
Server S3::2024/10/17 11:23:21 Committing transactions on server S5
Server S3::2024/10/17 11:23:21 Executing log 7 on server S5: sender:"S2"  receiver:"S3"  amount:10 , balance :100 , bMap: map[S1:105 S2:60 S3:100 S4:130 S5:100] 
Server S3::2024/10/17 11:23:21 Executing log 6 on server S5: sender:"S3"  receiver:"S1"  amount:55 , balance :100 , bMap: map[S1:160 S2:60 S3:45 S4:130 S5:100] 
Server S3::2024/10/17 11:23:21 Already executed log 3 on server S5: sender:"S5"  receiver:"S1"  amount:50 , balance :100
Server S3::2024/10/17 11:23:21 Already executed log 0 on server S5: sender:"S1"  receiver:"S3"  amount:45 , balance :100
Server S3::2024/10/17 11:23:21 Already executed log 2 on server S5: sender:"S2"  receiver:"S4"  amount:30 , balance :100
Server S3::2024/10/17 11:23:21 Already executed log 1 on server S5: sender:"S3"  receiver:"S5"  amount:55 , balance :100
Server S3::2024/10/17 11:23:21 Executing log 5 on server S5: sender:"S5"  receiver:"S3"  amount:5 , balance :100 , bMap: map[S1:160 S2:60 S3:50 S4:130 S5:100] 
Server S3::2024/10/17 11:23:21 Executing log 4 on server S5: sender:"S1"  receiver:"S3"  amount:75 , balance :100 , bMap: map[S1:85 S2:60 S3:125 S4:130 S5:100] 
Server S3::2024/10/17 11:23:21 Client 3 received response from server: success:true  message:"Transaction processed. Please check logs for further status."
Server S3::2024/10/17 11:23:21 Balance of  on server S3: 35
Server S3::2024/10/17 11:23:21 Client sends Transaction  9 {S1 S2 45}
Server S3::2024/10/17 11:23:21 Committing transactions on server S1
Server S1::2024/10/17 11:23:21 Already executed log 0 on server S1: sender:"S1"  receiver:"S3"  amount:45 , balance :30
Server S1::2024/10/17 11:23:21 Already executed log 2 on server S1: sender:"S2"  receiver:"S4"  amount:30 , balance :30
Server S1::2024/10/17 11:23:21 Already executed log 1 on server S1: sender:"S3"  receiver:"S5"  amount:55 , balance :30
Server S1::2024/10/17 11:23:21 Executing log 5 on server S1: sender:"S5"  receiver:"S3"  amount:5 , balance :30 , bMap: map[S1:30 S2:70 S3:95 S4:130 S5:100] 
Server S1::2024/10/17 11:23:21 Executing log 4 on server S1: sender:"S1"  receiver:"S3"  amount:75 , balance :30 , bMap: map[S1:30 S2:70 S3:170 S4:130 S5:100] 
Server S1::2024/10/17 11:23:21 Executing log 7 on server S1: sender:"S2"  receiver:"S3"  amount:10 , balance :30 , bMap: map[S1:30 S2:60 S3:180 S4:130 S5:100] 
Server S1::2024/10/17 11:23:21 Executing log 6 on server S1: sender:"S3"  receiver:"S1"  amount:55 , balance :85 , bMap: map[S1:85 S2:60 S3:125 S4:130 S5:100] 
Server S1::2024/10/17 11:23:21 Already executed log 3 on server S1: sender:"S5"  receiver:"S1"  amount:50 , balance :85
Server S1::2024/10/17 11:23:21 Server S1 received transaction from S1 to S2 of amount 45
Server S1::2024/10/17 11:23:21 Backlog paxos: Transaction 9 processed successfully on S1
Server S1::2024/10/17 11:23:21 Committing transactions on server S2
Server S1::2024/10/17 11:23:21 Executing log 4 on server S2: sender:"S1"  receiver:"S3"  amount:75 , balance :60 , bMap: map[S1:30 S2:60 S3:165 S4:130 S5:105] 
Server S1::2024/10/17 11:23:21 Executing log 7 on server S2: sender:"S2"  receiver:"S3"  amount:10 , balance :60 , bMap: map[S1:30 S2:60 S3:175 S4:130 S5:105] 
Server S1::2024/10/17 11:23:21 Executing log 6 on server S2: sender:"S3"  receiver:"S1"  amount:55 , balance :60 , bMap: map[S1:85 S2:60 S3:120 S4:130 S5:105] 
Server S1::2024/10/17 11:23:21 Already executed log 3 on server S2: sender:"S5"  receiver:"S1"  amount:50 , balance :60
Server S1::2024/10/17 11:23:21 Already executed log 0 on server S2: sender:"S1"  receiver:"S3"  amount:45 , balance :60
Server S1::2024/10/17 11:23:21 Already executed log 2 on server S2: sender:"S2"  receiver:"S4"  amount:30 , balance :60
Server S1::2024/10/17 11:23:21 Already executed log 1 on server S2: sender:"S3"  receiver:"S5"  amount:55 , balance :60
Server S1::2024/10/17 11:23:21 Executing log 5 on server S2: sender:"S5"  receiver:"S3"  amount:5 , balance :60 , bMap: map[S1:85 S2:60 S3:125 S4:130 S5:100] 
Server S1::2024/10/17 11:23:21 Committing transactions on server S3
Server S1::2024/10/17 11:23:21 Already executed log 3 on server S3: sender:"S5"  receiver:"S1"  amount:50 , balance :35
Server S1::2024/10/17 11:23:21 Already executed log 0 on server S3: sender:"S1"  receiver:"S3"  amount:45 , balance :35
Server S1::2024/10/17 11:23:21 Already executed log 2 on server S3: sender:"S2"  receiver:"S4"  amount:30 , balance :35
Server S1::2024/10/17 11:23:21 Already executed log 1 on server S3: sender:"S3"  receiver:"S5"  amount:55 , balance :35
Server S1::2024/10/17 11:23:21 Executing log 5 on server S3: sender:"S5"  receiver:"S3"  amount:5 , balance :40 , bMap: map[S1:105 S2:70 S3:40 S4:130 S5:100] 
Server S1::2024/10/17 11:23:21 Executing log 4 on server S3: sender:"S1"  receiver:"S3"  amount:75 , balance :115 , bMap: map[S1:30 S2:70 S3:115 S4:130 S5:100] 
Server S1::2024/10/17 11:23:21 Executing log 7 on server S3: sender:"S2"  receiver:"S3"  amount:10 , balance :125 , bMap: map[S1:30 S2:60 S3:125 S4:130 S5:100] 
Server S1::2024/10/17 11:23:21 Executing log 6 on server S3: sender:"S3"  receiver:"S1"  amount:55 , balance :125 , bMap: map[S1:85 S2:60 S3:125 S4:130 S5:100] 
Server S1::2024/10/17 11:23:21 Decide successful for self
Server S1::2024/10/17 11:23:21 Paxos consensus succeeded on S3
Server S1::2024/10/17 11:23:21 Backlog paxos: Transaction 8 processed successfully on S3
Server S1::2024/10/17 11:23:21 Client 1 received response from server: success:true  message:"Transaction processed. Please check logs for further status."
Server S1::2024/10/17 11:23:21 Balance of  on server S1: 40
2024/10/17 11:23:21 Choose an option:
2024/10/17 11:23:21 1. PrintBalance <client> or all
2024/10/17 11:23:21 2. PrintLog <server> or all
2024/10/17 11:23:21 3. PrintDB <server> or all
2024/10/17 11:23:21 4. Performance <server> or all
2024/10/17 11:23:21 5. NextIteration
2024/10/17 11:23:21 6. CrashServer <server>
2024/10/17 11:23:21 7. BalanceMap <server>
2024/10/17 11:23:21 Enter option: 
